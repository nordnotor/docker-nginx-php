user  www-data;
pid   nginx.pid;

daemon off;
worker_processes auto;
worker_shutdown_timeout 1m;

events {
    multi_accept on;
    worker_connections  1024;
    # use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] ;
    # use kqueue;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # file size
    client_max_body_size 50M;

    # log_format main '$time_local $status "$request" $remote_addr $request_length $bytes_sent $request_time "$request_body" '
    #                 '"$http_user_agent" "$http_x_forwarded_for" "$http_referer" "$remote_user" "$http_device" "$http_user_agent" ';

    # to boost I/O on HDD we can disable access logs
    # access_log /dev/stdout;
    # [ debug | info | notice | warn | error | crit ]
    # error_log /dev/stderr notice;

    error_log syslog:server=unix:/dev/log,facility=local0,nohostname,tag=nginx,severity=error;
    access_log syslog:server=unix:/dev/log,facility=local0,nohostname,tag=nginx,severity=info;

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # hide nginx info
    server_tokens off;

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_disable msie6;
    gzip_buffers 16 8k;
    gzip_min_length 1000;
    gzip_http_version 1.1;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss image/svg+xml;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    # open_file_cache max=200000 inactive=20s;
    # open_file_cache_valid 30s;
    # open_file_cache_min_uses 2;
    # open_file_cache_errors on;

    index index.php index.html;

    upstream fastcgi {
        server unix:/var/run/php.sock max_fails=5 fail_timeout=10;
        keepalive 5;
    }

    include /etc/nginx/conf.d/*.conf;
}
